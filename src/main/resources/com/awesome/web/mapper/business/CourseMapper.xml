<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.awesome.web.business.dao.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.awesome.web.business.domain.Course" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="profession" property="profession" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="credit" property="credit" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="video_name" property="videoName" jdbcType="VARCHAR" />
    <result column="video_url" property="videoUrl" jdbcType="VARCHAR" />
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
    <result column="video_type" property="videoType" jdbcType="INTEGER" />
    <result column="teacher" property="teacher" jdbcType="INTEGER" />
    <result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
    <result column="is_join" property="isJoin" jdbcType="BIT" />
    <result column="is_collect" property="isCollect" jdbcType="BIT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.awesome.web.business.domain.Course" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, code, profession, remark, credit, status, create_date, update_date, video_name, video_url,image_url,
    video_type, teacher
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.awesome.web.business.domain.Course" >
    insert into course (id, name, code, 
      profession, remark, credit, 
      status, create_date, update_date,
      video_name, video_url, image_url,
      video_type, teacher,  content)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{profession,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{credit,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER},now(), now(),
     #{videoName,jdbcType=VARCHAR},#{videoUrl,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR},
     #{videoType,jdbcType=INTEGER}, #{teacher,jdbcType=INTEGER},  #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.awesome.web.business.domain.Course" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="profession != null" >
        profession,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="status != null" >
        status,
      </if>
        create_date,
        update_date,
      <if test="videoName != null" >
        video_name,
      </if>
      <if test="videoUrl != null" >
        video_url,
      </if>
      <if test="imageUrl != null" >
        image_url,
      </if>
      <if test="videoType != null" >
        video_type,
      </if>
      <if test="teacher != null" >
        teacher,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="profession != null" >
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      now(),now(),
      <if test="videoName != null" >
        #{videoName,jdbcType=VARCHAR},
      </if>
      <if test="videoUrl != null" >
        #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null" >
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="videoType != null" >
        #{videoType,jdbcType=INTEGER},
      </if>
      <if test="teacher != null" >
        #{teacher,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.awesome.web.business.domain.Course" >
    update course
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="profession != null" >
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      update_date =now(),
      <if test="videoName != null" >
        video_name = #{videoName,jdbcType=VARCHAR},
      </if>
      <if test="videoUrl != null" >
        video_url = #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null" >
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="videoType != null" >
        video_type = #{videoType,jdbcType=INTEGER},
      </if>
      <if test="teacher != null" >
        teacher = #{teacher,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.awesome.web.business.domain.Course" >
    update course
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      update_date =now(),
      video_name = #{videoName,jdbcType=VARCHAR},
      video_url = #{videoUrl,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      video_type = #{videoType,jdbcType=INTEGER},
      teacher = #{teacher,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.awesome.web.business.domain.Course" >
    update course
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      update_date = now(),
      video_name = #{videoName,jdbcType=VARCHAR},
      video_url = #{videoUrl,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      video_type = #{videoType,jdbcType=INTEGER},
      teacher = #{teacher,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAll"  resultMap="BaseResultMap" >
      SELECT c.*,t.name teacher_name,sc.is_join,sc.is_collect FROM course c
      left join user t on c.teacher=t.uid
      LEFT OUTER join
      <choose>
        <when test="studentCourse==null">
          ( select 0 as is_join, 0 as is_collect  )  as sc
          on 1=1
        </when>
        <otherwise>
          (select * from student_course where student_id=#{studentCourse.studentId,jdbcType=INTEGER} )  as sc
          on c.id=sc.course_id
        </otherwise>
      </choose>
      <if test="courseSearch != null">
        <where>
          <if test="courseSearch.courseName != null">
            c.name like concat('%', #{courseSearch.courseName},'%')
          </if>
          <if test="courseSearch.teacher != null">
            and c.teacher = #{courseSearch.teacher}
          </if>
          <if test="courseSearch.startDate != null">
            and c.create_date &gt;= #{courseSearch.startDate}
          </if>
          <if test="courseSearch.endDate != null">
            and c.create_date &lt;= #{courseSearch.endDate}
          </if>
        </where>
      </if>
      order by c.create_date desc
  </select>

  <select id="findById" resultMap="BaseResultMap" >
    select * from course where id=#{id}
  </select>

  <select id="getAllByStudentCourse"  resultMap="BaseResultMap">
      SELECT c.*,t.name teacher_name,sc.is_join,sc.is_collect FROM course c
      left join user t on c.teacher=t.uid
      left join student_course sc
      on c.id=sc.course_id
      where sc.student_id=#{studentCourse.studentId,jdbcType=INTEGER}
      <if test="studentCourse.isJoin != null">
        and sc.is_join=#{studentCourse.isJoin,jdbcType=INTEGER}
      </if>
      <if test="studentCourse.isCollect != null">
        and sc.is_collect=#{studentCourse.isCollect,jdbcType=INTEGER}
      </if>
      <if test="courseSearch != null">
          <if test="courseSearch.courseName != null">
            and c.name like concat('%', #{courseSearch.courseName},'%')
          </if>
          <if test="courseSearch.teacher != null">
            and c.teacher = #{courseSearch.teacher}
          </if>
          <if test="courseSearch.startDate != null">
            and DATE_FORMAT(c.create_date,"%Y-%m-%d") &gt;= #{courseSearch.startDate}
          </if>
          <if test="courseSearch.endDate != null">
            and DATE_FORMAT(c.create_date,"%Y-%m-%d") &lt;= #{courseSearch.endDate}
          </if>
      </if>
      order by c.create_date desc
  </select>

  <select id="getAllByPublisher" parameterType="java.util.List" resultMap="BaseResultMap" >
    SELECT *,u.name teacher_name FROM course c
    left join user u
    on c.teacher= u.uid
    where u.uid in
    <foreach collection="list" item="id" open="(" close=")" separator=",">
      #{id,jdbcType=INTEGER}
    </foreach>
    order by c.create_date desc
  </select>
</mapper>